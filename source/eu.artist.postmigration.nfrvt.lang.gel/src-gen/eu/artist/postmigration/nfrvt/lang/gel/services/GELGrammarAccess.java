/*
* generated by Xtext
*/
package eu.artist.postmigration.nfrvt.lang.gel.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import eu.artist.postmigration.nfrvt.lang.common.services.ARTISTCommonGrammarAccess;

@Singleton
public class GELGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ARTISTModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ARTISTModel");
		private final RuleCall cMigrationEvaluationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ARTISTModel returns common::ARTISTModel:
		//	MigrationEvaluation;
		public ParserRule getRule() { return rule; }

		//MigrationEvaluation
		public RuleCall getMigrationEvaluationParserRuleCall() { return cMigrationEvaluationParserRuleCall; }
	}

	public class MigrationEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MigrationEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportNamespaceParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Keyword cEvaluationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameQualifiedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDateKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDateAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDateDATE_TIMETerminalRuleCall_5_0 = (RuleCall)cDateAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cMigrationKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTransformationsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTransformationsTransformationParserRuleCall_9_0 = (RuleCall)cTransformationsAssignment_9.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cPropertyEvaluationsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftSquareBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPropertyEvaluationsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPropertyEvaluationsAppliedPropertyEvaluationParserRuleCall_14_0 = (RuleCall)cPropertyEvaluationsAssignment_14.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cEvaluationAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cEvaluationGoalModelEvaluationParserRuleCall_17_0 = (RuleCall)cEvaluationAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//MigrationEvaluation:
		//	imports+=ImportNamespace* "evaluation" name=QualifiedName "{" "date" date=DATE_TIME "," "migration" "["
		//	transformations+=Transformation* "]" "," "property-evaluations" "[" propertyEvaluations+=AppliedPropertyEvaluation*
		//	"]" "," evaluation=GoalModelEvaluation "}";
		public ParserRule getRule() { return rule; }

		//imports+=ImportNamespace* "evaluation" name=QualifiedName "{" "date" date=DATE_TIME "," "migration" "["
		//transformations+=Transformation* "]" "," "property-evaluations" "[" propertyEvaluations+=AppliedPropertyEvaluation*
		//"]" "," evaluation=GoalModelEvaluation "}"
		public Group getGroup() { return cGroup; }

		//imports+=ImportNamespace*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//ImportNamespace
		public RuleCall getImportsImportNamespaceParserRuleCall_0_0() { return cImportsImportNamespaceParserRuleCall_0_0; }

		//"evaluation"
		public Keyword getEvaluationKeyword_1() { return cEvaluationKeyword_1; }

		//name=QualifiedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_2_0() { return cNameQualifiedNameParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"date"
		public Keyword getDateKeyword_4() { return cDateKeyword_4; }

		//date=DATE_TIME
		public Assignment getDateAssignment_5() { return cDateAssignment_5; }

		//DATE_TIME
		public RuleCall getDateDATE_TIMETerminalRuleCall_5_0() { return cDateDATE_TIMETerminalRuleCall_5_0; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//"migration"
		public Keyword getMigrationKeyword_7() { return cMigrationKeyword_7; }

		//"["
		public Keyword getLeftSquareBracketKeyword_8() { return cLeftSquareBracketKeyword_8; }

		//transformations+=Transformation*
		public Assignment getTransformationsAssignment_9() { return cTransformationsAssignment_9; }

		//Transformation
		public RuleCall getTransformationsTransformationParserRuleCall_9_0() { return cTransformationsTransformationParserRuleCall_9_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//"property-evaluations"
		public Keyword getPropertyEvaluationsKeyword_12() { return cPropertyEvaluationsKeyword_12; }

		//"["
		public Keyword getLeftSquareBracketKeyword_13() { return cLeftSquareBracketKeyword_13; }

		//propertyEvaluations+=AppliedPropertyEvaluation*
		public Assignment getPropertyEvaluationsAssignment_14() { return cPropertyEvaluationsAssignment_14; }

		//AppliedPropertyEvaluation
		public RuleCall getPropertyEvaluationsAppliedPropertyEvaluationParserRuleCall_14_0() { return cPropertyEvaluationsAppliedPropertyEvaluationParserRuleCall_14_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_15() { return cRightSquareBracketKeyword_15; }

		//","
		public Keyword getCommaKeyword_16() { return cCommaKeyword_16; }

		//evaluation=GoalModelEvaluation
		public Assignment getEvaluationAssignment_17() { return cEvaluationAssignment_17; }

		//GoalModelEvaluation
		public RuleCall getEvaluationGoalModelEvaluationParserRuleCall_17_0() { return cEvaluationGoalModelEvaluationParserRuleCall_17_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}

	public class TransformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransformationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPatternKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPatternAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPatternPatternCrossReference_4_0 = (CrossReference)cPatternAssignment_4.eContents().get(0);
		private final RuleCall cPatternPatternQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cPatternPatternCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cSourceKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cSourceAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cSourceNamedElementCrossReference_5_3_0 = (CrossReference)cSourceAssignment_5_3.eContents().get(0);
		private final RuleCall cSourceNamedElementQualifiedNameParserRuleCall_5_3_0_1 = (RuleCall)cSourceNamedElementCrossReference_5_3_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cTargetKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cTargetAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cTargetNamedElementCrossReference_6_3_0 = (CrossReference)cTargetAssignment_6_3.eContents().get(0);
		private final RuleCall cTargetNamedElementQualifiedNameParserRuleCall_6_3_0_1 = (RuleCall)cTargetNamedElementCrossReference_6_3_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cContextKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cContextAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cContextNamedElementCrossReference_7_3_0 = (CrossReference)cContextAssignment_7_3.eContents().get(0);
		private final RuleCall cContextNamedElementQualifiedNameParserRuleCall_7_3_0_1 = (RuleCall)cContextNamedElementCrossReference_7_3_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cInfoKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cInfoAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cInfoSTRINGTerminalRuleCall_8_2_0 = (RuleCall)cInfoAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Transformation:
		//	"transformation" name=ID "{" "pattern" pattern=[tsl::Pattern|QualifiedName] ("," "source" "["
		//	source+=[uml::NamedElement|QualifiedName]* "]")? ("," "target" "[" target+=[uml::NamedElement|QualifiedName]* "]")?
		//	("," "context" "[" context+=[uml::NamedElement|QualifiedName]* "]")? ("," "info" info=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"transformation" name=ID "{" "pattern" pattern=[tsl::Pattern|QualifiedName] ("," "source" "["
		//source+=[uml::NamedElement|QualifiedName]* "]")? ("," "target" "[" target+=[uml::NamedElement|QualifiedName]* "]")?
		//("," "context" "[" context+=[uml::NamedElement|QualifiedName]* "]")? ("," "info" info=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"transformation"
		public Keyword getTransformationKeyword_0() { return cTransformationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"pattern"
		public Keyword getPatternKeyword_3() { return cPatternKeyword_3; }

		//pattern=[tsl::Pattern|QualifiedName]
		public Assignment getPatternAssignment_4() { return cPatternAssignment_4; }

		//[tsl::Pattern|QualifiedName]
		public CrossReference getPatternPatternCrossReference_4_0() { return cPatternPatternCrossReference_4_0; }

		//QualifiedName
		public RuleCall getPatternPatternQualifiedNameParserRuleCall_4_0_1() { return cPatternPatternQualifiedNameParserRuleCall_4_0_1; }

		//("," "source" "[" source+=[uml::NamedElement|QualifiedName]* "]")?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//"source"
		public Keyword getSourceKeyword_5_1() { return cSourceKeyword_5_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5_2() { return cLeftSquareBracketKeyword_5_2; }

		//source+=[uml::NamedElement|QualifiedName]*
		public Assignment getSourceAssignment_5_3() { return cSourceAssignment_5_3; }

		//[uml::NamedElement|QualifiedName]
		public CrossReference getSourceNamedElementCrossReference_5_3_0() { return cSourceNamedElementCrossReference_5_3_0; }

		//QualifiedName
		public RuleCall getSourceNamedElementQualifiedNameParserRuleCall_5_3_0_1() { return cSourceNamedElementQualifiedNameParserRuleCall_5_3_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5_4() { return cRightSquareBracketKeyword_5_4; }

		//("," "target" "[" target+=[uml::NamedElement|QualifiedName]* "]")?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//"target"
		public Keyword getTargetKeyword_6_1() { return cTargetKeyword_6_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_2() { return cLeftSquareBracketKeyword_6_2; }

		//target+=[uml::NamedElement|QualifiedName]*
		public Assignment getTargetAssignment_6_3() { return cTargetAssignment_6_3; }

		//[uml::NamedElement|QualifiedName]
		public CrossReference getTargetNamedElementCrossReference_6_3_0() { return cTargetNamedElementCrossReference_6_3_0; }

		//QualifiedName
		public RuleCall getTargetNamedElementQualifiedNameParserRuleCall_6_3_0_1() { return cTargetNamedElementQualifiedNameParserRuleCall_6_3_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//("," "context" "[" context+=[uml::NamedElement|QualifiedName]* "]")?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//"context"
		public Keyword getContextKeyword_7_1() { return cContextKeyword_7_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_2() { return cLeftSquareBracketKeyword_7_2; }

		//context+=[uml::NamedElement|QualifiedName]*
		public Assignment getContextAssignment_7_3() { return cContextAssignment_7_3; }

		//[uml::NamedElement|QualifiedName]
		public CrossReference getContextNamedElementCrossReference_7_3_0() { return cContextNamedElementCrossReference_7_3_0; }

		//QualifiedName
		public RuleCall getContextNamedElementQualifiedNameParserRuleCall_7_3_0_1() { return cContextNamedElementQualifiedNameParserRuleCall_7_3_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_4() { return cRightSquareBracketKeyword_7_4; }

		//("," "info" info=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//"info"
		public Keyword getInfoKeyword_8_1() { return cInfoKeyword_8_1; }

		//info=STRING
		public Assignment getInfoAssignment_8_2() { return cInfoAssignment_8_2; }

		//STRING
		public RuleCall getInfoSTRINGTerminalRuleCall_8_2_0() { return cInfoSTRINGTerminalRuleCall_8_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class AppliedPropertyEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AppliedPropertyEvaluation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAppliedQualitativePropertyEvaluationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAppliedQuantitativePropertyEvaluationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AppliedPropertyEvaluation:
		//	AppliedQualitativePropertyEvaluation | AppliedQuantitativePropertyEvaluation;
		public ParserRule getRule() { return rule; }

		//AppliedQualitativePropertyEvaluation | AppliedQuantitativePropertyEvaluation
		public Alternatives getAlternatives() { return cAlternatives; }

		//AppliedQualitativePropertyEvaluation
		public RuleCall getAppliedQualitativePropertyEvaluationParserRuleCall_0() { return cAppliedQualitativePropertyEvaluationParserRuleCall_0; }

		//AppliedQuantitativePropertyEvaluation
		public RuleCall getAppliedQuantitativePropertyEvaluationParserRuleCall_1() { return cAppliedQuantitativePropertyEvaluationParserRuleCall_1; }
	}

	public class AppliedQualitativePropertyEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AppliedQualitativePropertyEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQualitativeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPropertyKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPropertyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPropertyAppliedQualitativePropertyCrossReference_4_0 = (CrossReference)cPropertyAssignment_4.eContents().get(0);
		private final RuleCall cPropertyAppliedQualitativePropertyQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cPropertyAppliedQualitativePropertyCrossReference_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueValueSpecificationParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEvaluationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEvaluationNumberExpressionEvaluationParserRuleCall_9_0 = (RuleCall)cEvaluationAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//AppliedQualitativePropertyEvaluation:
		//	"qualitative" name=ID "{" "property" property=[gml::AppliedQualitativeProperty|QualifiedName] "," "value"
		//	value=ValueSpecification "," evaluation=NumberExpressionEvaluation "}";
		public ParserRule getRule() { return rule; }

		//"qualitative" name=ID "{" "property" property=[gml::AppliedQualitativeProperty|QualifiedName] "," "value"
		//value=ValueSpecification "," evaluation=NumberExpressionEvaluation "}"
		public Group getGroup() { return cGroup; }

		//"qualitative"
		public Keyword getQualitativeKeyword_0() { return cQualitativeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"property"
		public Keyword getPropertyKeyword_3() { return cPropertyKeyword_3; }

		//property=[gml::AppliedQualitativeProperty|QualifiedName]
		public Assignment getPropertyAssignment_4() { return cPropertyAssignment_4; }

		//[gml::AppliedQualitativeProperty|QualifiedName]
		public CrossReference getPropertyAppliedQualitativePropertyCrossReference_4_0() { return cPropertyAppliedQualitativePropertyCrossReference_4_0; }

		//QualifiedName
		public RuleCall getPropertyAppliedQualitativePropertyQualifiedNameParserRuleCall_4_0_1() { return cPropertyAppliedQualitativePropertyQualifiedNameParserRuleCall_4_0_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"value"
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }

		//value=ValueSpecification
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//ValueSpecification
		public RuleCall getValueValueSpecificationParserRuleCall_7_0() { return cValueValueSpecificationParserRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//evaluation=NumberExpressionEvaluation
		public Assignment getEvaluationAssignment_9() { return cEvaluationAssignment_9; }

		//NumberExpressionEvaluation
		public RuleCall getEvaluationNumberExpressionEvaluationParserRuleCall_9_0() { return cEvaluationNumberExpressionEvaluationParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class AppliedQuantitativePropertyEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AppliedQuantitativePropertyEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuantitativeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPropertyKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPropertyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPropertyAppliedQuantitativePropertyCrossReference_4_0 = (CrossReference)cPropertyAssignment_4.eContents().get(0);
		private final RuleCall cPropertyAppliedQuantitativePropertyQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cPropertyAppliedQuantitativePropertyCrossReference_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueValueSpecificationParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEvaluationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEvaluationValueExpressionEvaluationParserRuleCall_9_0 = (RuleCall)cEvaluationAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cMeasurementsKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Assignment cMeasurementsAssignment_10_3_0 = (Assignment)cGroup_10_3.eContents().get(0);
		private final CrossReference cMeasurementsMeasurementCrossReference_10_3_0_0 = (CrossReference)cMeasurementsAssignment_10_3_0.eContents().get(0);
		private final RuleCall cMeasurementsMeasurementQualifiedNameParserRuleCall_10_3_0_0_1 = (RuleCall)cMeasurementsMeasurementCrossReference_10_3_0_0.eContents().get(1);
		private final Group cGroup_10_3_1 = (Group)cGroup_10_3.eContents().get(1);
		private final Keyword cCommaKeyword_10_3_1_0 = (Keyword)cGroup_10_3_1.eContents().get(0);
		private final Assignment cMeasurementsAssignment_10_3_1_1 = (Assignment)cGroup_10_3_1.eContents().get(1);
		private final CrossReference cMeasurementsMeasurementCrossReference_10_3_1_1_0 = (CrossReference)cMeasurementsAssignment_10_3_1_1.eContents().get(0);
		private final RuleCall cMeasurementsMeasurementQualifiedNameParserRuleCall_10_3_1_1_0_1 = (RuleCall)cMeasurementsMeasurementCrossReference_10_3_1_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//AppliedQuantitativePropertyEvaluation:
		//	"quantitative" name=ID "{" "property" property=[gml::AppliedQuantitativeProperty|QualifiedName] "," "value"
		//	value=ValueSpecification "," evaluation=ValueExpressionEvaluation ("," "measurements" "["
		//	(measurements+=[pml::Measurement|QualifiedName] ("," measurements+=[pml::Measurement|QualifiedName])*)? "]")? "}";
		public ParserRule getRule() { return rule; }

		//"quantitative" name=ID "{" "property" property=[gml::AppliedQuantitativeProperty|QualifiedName] "," "value"
		//value=ValueSpecification "," evaluation=ValueExpressionEvaluation ("," "measurements" "["
		//(measurements+=[pml::Measurement|QualifiedName] ("," measurements+=[pml::Measurement|QualifiedName])*)? "]")? "}"
		public Group getGroup() { return cGroup; }

		//"quantitative"
		public Keyword getQuantitativeKeyword_0() { return cQuantitativeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"property"
		public Keyword getPropertyKeyword_3() { return cPropertyKeyword_3; }

		//property=[gml::AppliedQuantitativeProperty|QualifiedName]
		public Assignment getPropertyAssignment_4() { return cPropertyAssignment_4; }

		//[gml::AppliedQuantitativeProperty|QualifiedName]
		public CrossReference getPropertyAppliedQuantitativePropertyCrossReference_4_0() { return cPropertyAppliedQuantitativePropertyCrossReference_4_0; }

		//QualifiedName
		public RuleCall getPropertyAppliedQuantitativePropertyQualifiedNameParserRuleCall_4_0_1() { return cPropertyAppliedQuantitativePropertyQualifiedNameParserRuleCall_4_0_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"value"
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }

		//value=ValueSpecification
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//ValueSpecification
		public RuleCall getValueValueSpecificationParserRuleCall_7_0() { return cValueValueSpecificationParserRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//evaluation=ValueExpressionEvaluation
		public Assignment getEvaluationAssignment_9() { return cEvaluationAssignment_9; }

		//ValueExpressionEvaluation
		public RuleCall getEvaluationValueExpressionEvaluationParserRuleCall_9_0() { return cEvaluationValueExpressionEvaluationParserRuleCall_9_0; }

		//("," "measurements" "[" (measurements+=[pml::Measurement|QualifiedName] (","
		//measurements+=[pml::Measurement|QualifiedName])*)? "]")?
		public Group getGroup_10() { return cGroup_10; }

		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }

		//"measurements"
		public Keyword getMeasurementsKeyword_10_1() { return cMeasurementsKeyword_10_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_10_2() { return cLeftSquareBracketKeyword_10_2; }

		//(measurements+=[pml::Measurement|QualifiedName] ("," measurements+=[pml::Measurement|QualifiedName])*)?
		public Group getGroup_10_3() { return cGroup_10_3; }

		//measurements+=[pml::Measurement|QualifiedName]
		public Assignment getMeasurementsAssignment_10_3_0() { return cMeasurementsAssignment_10_3_0; }

		//[pml::Measurement|QualifiedName]
		public CrossReference getMeasurementsMeasurementCrossReference_10_3_0_0() { return cMeasurementsMeasurementCrossReference_10_3_0_0; }

		//QualifiedName
		public RuleCall getMeasurementsMeasurementQualifiedNameParserRuleCall_10_3_0_0_1() { return cMeasurementsMeasurementQualifiedNameParserRuleCall_10_3_0_0_1; }

		//("," measurements+=[pml::Measurement|QualifiedName])*
		public Group getGroup_10_3_1() { return cGroup_10_3_1; }

		//","
		public Keyword getCommaKeyword_10_3_1_0() { return cCommaKeyword_10_3_1_0; }

		//measurements+=[pml::Measurement|QualifiedName]
		public Assignment getMeasurementsAssignment_10_3_1_1() { return cMeasurementsAssignment_10_3_1_1; }

		//[pml::Measurement|QualifiedName]
		public CrossReference getMeasurementsMeasurementCrossReference_10_3_1_1_0() { return cMeasurementsMeasurementCrossReference_10_3_1_1_0; }

		//QualifiedName
		public RuleCall getMeasurementsMeasurementQualifiedNameParserRuleCall_10_3_1_1_0_1() { return cMeasurementsMeasurementQualifiedNameParserRuleCall_10_3_1_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10_4() { return cRightSquareBracketKeyword_10_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class GoalModelEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GoalModelEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGoalmodelEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGoalmodelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGoalModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cGoalModelGoalModelCrossReference_3_0 = (CrossReference)cGoalModelAssignment_3.eContents().get(0);
		private final RuleCall cGoalModelGoalModelQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cGoalModelGoalModelCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cVerdictKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVerdictAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVerdictVerdictEnumRuleCall_6_0 = (RuleCall)cVerdictAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cReasonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cReasonAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cReasonSTRINGTerminalRuleCall_9_0 = (RuleCall)cReasonAssignment_9.eContents().get(0);
		private final Keyword cCommaKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cGoalEvaluationsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftSquareBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cEvaluationsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cEvaluationsGoalEvaluationParserRuleCall_13_0 = (RuleCall)cEvaluationsAssignment_13.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//GoalModelEvaluation:
		//	"goalmodel-evaluation" "{" "goalmodel" goalModel=[gml::GoalModel|QualifiedName] "," "verdict" verdict=Verdict ","
		//	"reason" reason=STRING "," "goal-evaluations" "[" evaluations+=GoalEvaluation* "]" "}";
		public ParserRule getRule() { return rule; }

		//"goalmodel-evaluation" "{" "goalmodel" goalModel=[gml::GoalModel|QualifiedName] "," "verdict" verdict=Verdict ","
		//"reason" reason=STRING "," "goal-evaluations" "[" evaluations+=GoalEvaluation* "]" "}"
		public Group getGroup() { return cGroup; }

		//"goalmodel-evaluation"
		public Keyword getGoalmodelEvaluationKeyword_0() { return cGoalmodelEvaluationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"goalmodel"
		public Keyword getGoalmodelKeyword_2() { return cGoalmodelKeyword_2; }

		//goalModel=[gml::GoalModel|QualifiedName]
		public Assignment getGoalModelAssignment_3() { return cGoalModelAssignment_3; }

		//[gml::GoalModel|QualifiedName]
		public CrossReference getGoalModelGoalModelCrossReference_3_0() { return cGoalModelGoalModelCrossReference_3_0; }

		//QualifiedName
		public RuleCall getGoalModelGoalModelQualifiedNameParserRuleCall_3_0_1() { return cGoalModelGoalModelQualifiedNameParserRuleCall_3_0_1; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"verdict"
		public Keyword getVerdictKeyword_5() { return cVerdictKeyword_5; }

		//verdict=Verdict
		public Assignment getVerdictAssignment_6() { return cVerdictAssignment_6; }

		//Verdict
		public RuleCall getVerdictVerdictEnumRuleCall_6_0() { return cVerdictVerdictEnumRuleCall_6_0; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//"reason"
		public Keyword getReasonKeyword_8() { return cReasonKeyword_8; }

		//reason=STRING
		public Assignment getReasonAssignment_9() { return cReasonAssignment_9; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_9_0() { return cReasonSTRINGTerminalRuleCall_9_0; }

		//","
		public Keyword getCommaKeyword_10() { return cCommaKeyword_10; }

		//"goal-evaluations"
		public Keyword getGoalEvaluationsKeyword_11() { return cGoalEvaluationsKeyword_11; }

		//"["
		public Keyword getLeftSquareBracketKeyword_12() { return cLeftSquareBracketKeyword_12; }

		//evaluations+=GoalEvaluation*
		public Assignment getEvaluationsAssignment_13() { return cEvaluationsAssignment_13; }

		//GoalEvaluation
		public RuleCall getEvaluationsGoalEvaluationParserRuleCall_13_0() { return cEvaluationsGoalEvaluationParserRuleCall_13_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_14() { return cRightSquareBracketKeyword_14; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class GoalEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GoalEvaluation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSoftGoalEvaluationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHardGoalEvaluationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCompositeGoalEvaluationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GoalEvaluation:
		//	SoftGoalEvaluation | HardGoalEvaluation | CompositeGoalEvaluation;
		public ParserRule getRule() { return rule; }

		//SoftGoalEvaluation | HardGoalEvaluation | CompositeGoalEvaluation
		public Alternatives getAlternatives() { return cAlternatives; }

		//SoftGoalEvaluation
		public RuleCall getSoftGoalEvaluationParserRuleCall_0() { return cSoftGoalEvaluationParserRuleCall_0; }

		//HardGoalEvaluation
		public RuleCall getHardGoalEvaluationParserRuleCall_1() { return cHardGoalEvaluationParserRuleCall_1; }

		//CompositeGoalEvaluation
		public RuleCall getCompositeGoalEvaluationParserRuleCall_2() { return cCompositeGoalEvaluationParserRuleCall_2; }
	}

	public class SoftGoalEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SoftGoalEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSoftGoalEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGoalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGoalAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cGoalSoftGoalCrossReference_4_0 = (CrossReference)cGoalAssignment_4.eContents().get(0);
		private final RuleCall cGoalSoftGoalQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cGoalSoftGoalCrossReference_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cVerdictKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVerdictAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVerdictVerdictEnumRuleCall_7_0 = (RuleCall)cVerdictAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cReasonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cReasonAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cReasonSTRINGTerminalRuleCall_10_0 = (RuleCall)cReasonAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cDifferenceKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cDifferenceAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDifferenceNumberParserRuleCall_13_0 = (RuleCall)cDifferenceAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//SoftGoalEvaluation:
		//	"soft-goal-evaluation" name=ID "{" "goal" goal=[gml::SoftGoal|QualifiedName] "," "verdict" verdict=Verdict ","
		//	"reason" reason=STRING "," "difference" difference=Number? "}";
		public ParserRule getRule() { return rule; }

		//"soft-goal-evaluation" name=ID "{" "goal" goal=[gml::SoftGoal|QualifiedName] "," "verdict" verdict=Verdict "," "reason"
		//reason=STRING "," "difference" difference=Number? "}"
		public Group getGroup() { return cGroup; }

		//"soft-goal-evaluation"
		public Keyword getSoftGoalEvaluationKeyword_0() { return cSoftGoalEvaluationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"goal"
		public Keyword getGoalKeyword_3() { return cGoalKeyword_3; }

		//goal=[gml::SoftGoal|QualifiedName]
		public Assignment getGoalAssignment_4() { return cGoalAssignment_4; }

		//[gml::SoftGoal|QualifiedName]
		public CrossReference getGoalSoftGoalCrossReference_4_0() { return cGoalSoftGoalCrossReference_4_0; }

		//QualifiedName
		public RuleCall getGoalSoftGoalQualifiedNameParserRuleCall_4_0_1() { return cGoalSoftGoalQualifiedNameParserRuleCall_4_0_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"verdict"
		public Keyword getVerdictKeyword_6() { return cVerdictKeyword_6; }

		//verdict=Verdict
		public Assignment getVerdictAssignment_7() { return cVerdictAssignment_7; }

		//Verdict
		public RuleCall getVerdictVerdictEnumRuleCall_7_0() { return cVerdictVerdictEnumRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//"reason"
		public Keyword getReasonKeyword_9() { return cReasonKeyword_9; }

		//reason=STRING
		public Assignment getReasonAssignment_10() { return cReasonAssignment_10; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_10_0() { return cReasonSTRINGTerminalRuleCall_10_0; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//"difference"
		public Keyword getDifferenceKeyword_12() { return cDifferenceKeyword_12; }

		//difference=Number?
		public Assignment getDifferenceAssignment_13() { return cDifferenceAssignment_13; }

		//Number
		public RuleCall getDifferenceNumberParserRuleCall_13_0() { return cDifferenceNumberParserRuleCall_13_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class HardGoalEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HardGoalEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHardGoalEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGoalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGoalAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cGoalHardGoalCrossReference_4_0 = (CrossReference)cGoalAssignment_4.eContents().get(0);
		private final RuleCall cGoalHardGoalQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cGoalHardGoalCrossReference_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cVerdictKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVerdictAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVerdictVerdictEnumRuleCall_7_0 = (RuleCall)cVerdictAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cReasonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cReasonAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cReasonSTRINGTerminalRuleCall_10_0 = (RuleCall)cReasonAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cConditionEvaluationKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cConditionEvaluationAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cConditionEvaluationBooleanExpressionEvaluationParserRuleCall_13_0 = (RuleCall)cConditionEvaluationAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//HardGoalEvaluation:
		//	"hard-goal-evaluation" name=ID "{" "goal" goal=[gml::HardGoal|QualifiedName] "," "verdict" verdict=Verdict ","
		//	"reason" reason=STRING "," "condition-evaluation" conditionEvaluation=BooleanExpressionEvaluation "}";
		public ParserRule getRule() { return rule; }

		//"hard-goal-evaluation" name=ID "{" "goal" goal=[gml::HardGoal|QualifiedName] "," "verdict" verdict=Verdict "," "reason"
		//reason=STRING "," "condition-evaluation" conditionEvaluation=BooleanExpressionEvaluation "}"
		public Group getGroup() { return cGroup; }

		//"hard-goal-evaluation"
		public Keyword getHardGoalEvaluationKeyword_0() { return cHardGoalEvaluationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"goal"
		public Keyword getGoalKeyword_3() { return cGoalKeyword_3; }

		//goal=[gml::HardGoal|QualifiedName]
		public Assignment getGoalAssignment_4() { return cGoalAssignment_4; }

		//[gml::HardGoal|QualifiedName]
		public CrossReference getGoalHardGoalCrossReference_4_0() { return cGoalHardGoalCrossReference_4_0; }

		//QualifiedName
		public RuleCall getGoalHardGoalQualifiedNameParserRuleCall_4_0_1() { return cGoalHardGoalQualifiedNameParserRuleCall_4_0_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"verdict"
		public Keyword getVerdictKeyword_6() { return cVerdictKeyword_6; }

		//verdict=Verdict
		public Assignment getVerdictAssignment_7() { return cVerdictAssignment_7; }

		//Verdict
		public RuleCall getVerdictVerdictEnumRuleCall_7_0() { return cVerdictVerdictEnumRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//"reason"
		public Keyword getReasonKeyword_9() { return cReasonKeyword_9; }

		//reason=STRING
		public Assignment getReasonAssignment_10() { return cReasonAssignment_10; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_10_0() { return cReasonSTRINGTerminalRuleCall_10_0; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//"condition-evaluation"
		public Keyword getConditionEvaluationKeyword_12() { return cConditionEvaluationKeyword_12; }

		//conditionEvaluation=BooleanExpressionEvaluation
		public Assignment getConditionEvaluationAssignment_13() { return cConditionEvaluationAssignment_13; }

		//BooleanExpressionEvaluation
		public RuleCall getConditionEvaluationBooleanExpressionEvaluationParserRuleCall_13_0() { return cConditionEvaluationBooleanExpressionEvaluationParserRuleCall_13_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class CompositeGoalEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompositeGoalEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeGoalEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGoalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGoalAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cGoalCompositeGoalCrossReference_4_0 = (CrossReference)cGoalAssignment_4.eContents().get(0);
		private final RuleCall cGoalCompositeGoalQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cGoalCompositeGoalCrossReference_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cVerdictKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVerdictAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVerdictVerdictEnumRuleCall_7_0 = (RuleCall)cVerdictAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cReasonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cReasonAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cReasonSTRINGTerminalRuleCall_10_0 = (RuleCall)cReasonAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cConditionEvaluationKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cConditionEvaluationAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cConditionEvaluationBooleanExpressionEvaluationParserRuleCall_13_0 = (RuleCall)cConditionEvaluationAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//CompositeGoalEvaluation:
		//	"composite-goal-evaluation" name=ID "{" "goal" goal=[gml::CompositeGoal|QualifiedName] "," "verdict" verdict=Verdict
		//	"," "reason" reason=STRING "," "condition-evaluation" conditionEvaluation=BooleanExpressionEvaluation "}";
		public ParserRule getRule() { return rule; }

		//"composite-goal-evaluation" name=ID "{" "goal" goal=[gml::CompositeGoal|QualifiedName] "," "verdict" verdict=Verdict ","
		//"reason" reason=STRING "," "condition-evaluation" conditionEvaluation=BooleanExpressionEvaluation "}"
		public Group getGroup() { return cGroup; }

		//"composite-goal-evaluation"
		public Keyword getCompositeGoalEvaluationKeyword_0() { return cCompositeGoalEvaluationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"goal"
		public Keyword getGoalKeyword_3() { return cGoalKeyword_3; }

		//goal=[gml::CompositeGoal|QualifiedName]
		public Assignment getGoalAssignment_4() { return cGoalAssignment_4; }

		//[gml::CompositeGoal|QualifiedName]
		public CrossReference getGoalCompositeGoalCrossReference_4_0() { return cGoalCompositeGoalCrossReference_4_0; }

		//QualifiedName
		public RuleCall getGoalCompositeGoalQualifiedNameParserRuleCall_4_0_1() { return cGoalCompositeGoalQualifiedNameParserRuleCall_4_0_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"verdict"
		public Keyword getVerdictKeyword_6() { return cVerdictKeyword_6; }

		//verdict=Verdict
		public Assignment getVerdictAssignment_7() { return cVerdictAssignment_7; }

		//Verdict
		public RuleCall getVerdictVerdictEnumRuleCall_7_0() { return cVerdictVerdictEnumRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//"reason"
		public Keyword getReasonKeyword_9() { return cReasonKeyword_9; }

		//reason=STRING
		public Assignment getReasonAssignment_10() { return cReasonAssignment_10; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_10_0() { return cReasonSTRINGTerminalRuleCall_10_0; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//"condition-evaluation"
		public Keyword getConditionEvaluationKeyword_12() { return cConditionEvaluationKeyword_12; }

		//conditionEvaluation=BooleanExpressionEvaluation
		public Assignment getConditionEvaluationAssignment_13() { return cConditionEvaluationAssignment_13; }

		//BooleanExpressionEvaluation
		public RuleCall getConditionEvaluationBooleanExpressionEvaluationParserRuleCall_13_0() { return cConditionEvaluationBooleanExpressionEvaluationParserRuleCall_13_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class ValueExpressionEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueExpressionEvaluation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValueSpecificationExpressionEvaluationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanExpressionEvaluationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNumberExpressionEvaluationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ValueExpressionEvaluation:
		//	ValueSpecificationExpressionEvaluation | BooleanExpressionEvaluation | NumberExpressionEvaluation;
		public ParserRule getRule() { return rule; }

		//ValueSpecificationExpressionEvaluation | BooleanExpressionEvaluation | NumberExpressionEvaluation
		public Alternatives getAlternatives() { return cAlternatives; }

		//ValueSpecificationExpressionEvaluation
		public RuleCall getValueSpecificationExpressionEvaluationParserRuleCall_0() { return cValueSpecificationExpressionEvaluationParserRuleCall_0; }

		//BooleanExpressionEvaluation
		public RuleCall getBooleanExpressionEvaluationParserRuleCall_1() { return cBooleanExpressionEvaluationParserRuleCall_1; }

		//NumberExpressionEvaluation
		public RuleCall getNumberExpressionEvaluationParserRuleCall_2() { return cNumberExpressionEvaluationParserRuleCall_2; }
	}

	public class ValueSpecificationExpressionEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueSpecificationExpressionEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cResultKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResultAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResultValueSpecificationParserRuleCall_3_0 = (RuleCall)cResultAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cReasonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cReasonAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cReasonSTRINGTerminalRuleCall_6_0 = (RuleCall)cReasonAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEvaluationsKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cEvaluationsAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cEvaluationsValueExpressionEvaluationParserRuleCall_7_3_0 = (RuleCall)cEvaluationsAssignment_7_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ValueSpecificationExpressionEvaluation:
		//	"value-evaluation" "{" "result" result=ValueSpecification? "," "reason" reason=STRING ("," "evaluations" "["
		//	evaluations+=ValueExpressionEvaluation* "]")? "}";
		public ParserRule getRule() { return rule; }

		//"value-evaluation" "{" "result" result=ValueSpecification? "," "reason" reason=STRING ("," "evaluations" "["
		//evaluations+=ValueExpressionEvaluation* "]")? "}"
		public Group getGroup() { return cGroup; }

		//"value-evaluation"
		public Keyword getValueEvaluationKeyword_0() { return cValueEvaluationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"result"
		public Keyword getResultKeyword_2() { return cResultKeyword_2; }

		//result=ValueSpecification?
		public Assignment getResultAssignment_3() { return cResultAssignment_3; }

		//ValueSpecification
		public RuleCall getResultValueSpecificationParserRuleCall_3_0() { return cResultValueSpecificationParserRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"reason"
		public Keyword getReasonKeyword_5() { return cReasonKeyword_5; }

		//reason=STRING
		public Assignment getReasonAssignment_6() { return cReasonAssignment_6; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_6_0() { return cReasonSTRINGTerminalRuleCall_6_0; }

		//("," "evaluations" "[" evaluations+=ValueExpressionEvaluation* "]")?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//"evaluations"
		public Keyword getEvaluationsKeyword_7_1() { return cEvaluationsKeyword_7_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_2() { return cLeftSquareBracketKeyword_7_2; }

		//evaluations+=ValueExpressionEvaluation*
		public Assignment getEvaluationsAssignment_7_3() { return cEvaluationsAssignment_7_3; }

		//ValueExpressionEvaluation
		public RuleCall getEvaluationsValueExpressionEvaluationParserRuleCall_7_3_0() { return cEvaluationsValueExpressionEvaluationParserRuleCall_7_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_4() { return cRightSquareBracketKeyword_7_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class BooleanExpressionEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanExpressionEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExpressionEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cResultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cResultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cResultBooleanLiteralParserRuleCall_2_1_0 = (RuleCall)cResultAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cReasonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReasonAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReasonSTRINGTerminalRuleCall_4_0 = (RuleCall)cReasonAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cDifferenceKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDifferenceAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDifferenceNumberParserRuleCall_5_2_0 = (RuleCall)cDifferenceAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEvaluationsKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cEvaluationsAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cEvaluationsValueExpressionEvaluationParserRuleCall_6_3_0 = (RuleCall)cEvaluationsAssignment_6_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//BooleanExpressionEvaluation:
		//	"expression-evaluation" // expression = [gml::ValueExpression | STRING ] "{"
		//	"{" ("result" result=BooleanLiteral? ",")? "reason" reason=STRING ("," "difference" difference=Number?)? (","
		//	"evaluations" "[" evaluations+=ValueExpressionEvaluation* "]")? "}";
		public ParserRule getRule() { return rule; }

		//"expression-evaluation" // expression = [gml::ValueExpression | STRING ] "{"
		//"{" ("result" result=BooleanLiteral? ",")? "reason" reason=STRING ("," "difference" difference=Number?)? (","
		//"evaluations" "[" evaluations+=ValueExpressionEvaluation* "]")? "}"
		public Group getGroup() { return cGroup; }

		//"expression-evaluation"
		public Keyword getExpressionEvaluationKeyword_0() { return cExpressionEvaluationKeyword_0; }

		//// expression = [gml::ValueExpression | STRING ] "{"
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("result" result=BooleanLiteral? ",")?
		public Group getGroup_2() { return cGroup_2; }

		//"result"
		public Keyword getResultKeyword_2_0() { return cResultKeyword_2_0; }

		//result=BooleanLiteral?
		public Assignment getResultAssignment_2_1() { return cResultAssignment_2_1; }

		//BooleanLiteral
		public RuleCall getResultBooleanLiteralParserRuleCall_2_1_0() { return cResultBooleanLiteralParserRuleCall_2_1_0; }

		//","
		public Keyword getCommaKeyword_2_2() { return cCommaKeyword_2_2; }

		//"reason"
		public Keyword getReasonKeyword_3() { return cReasonKeyword_3; }

		//reason=STRING
		public Assignment getReasonAssignment_4() { return cReasonAssignment_4; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_4_0() { return cReasonSTRINGTerminalRuleCall_4_0; }

		//("," "difference" difference=Number?)?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//"difference"
		public Keyword getDifferenceKeyword_5_1() { return cDifferenceKeyword_5_1; }

		//difference=Number?
		public Assignment getDifferenceAssignment_5_2() { return cDifferenceAssignment_5_2; }

		//Number
		public RuleCall getDifferenceNumberParserRuleCall_5_2_0() { return cDifferenceNumberParserRuleCall_5_2_0; }

		//("," "evaluations" "[" evaluations+=ValueExpressionEvaluation* "]")?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//"evaluations"
		public Keyword getEvaluationsKeyword_6_1() { return cEvaluationsKeyword_6_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_2() { return cLeftSquareBracketKeyword_6_2; }

		//evaluations+=ValueExpressionEvaluation*
		public Assignment getEvaluationsAssignment_6_3() { return cEvaluationsAssignment_6_3; }

		//ValueExpressionEvaluation
		public RuleCall getEvaluationsValueExpressionEvaluationParserRuleCall_6_3_0() { return cEvaluationsValueExpressionEvaluationParserRuleCall_6_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class NumberExpressionEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberExpressionEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArithmeticEvaluationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cResultKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResultAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResultNumberLiteralParserRuleCall_3_0 = (RuleCall)cResultAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cReasonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cReasonAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cReasonSTRINGTerminalRuleCall_6_0 = (RuleCall)cReasonAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cArithmeticEvaluationsKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cEvaluationsAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cEvaluationsNumberExpressionEvaluationParserRuleCall_7_3_0 = (RuleCall)cEvaluationsAssignment_7_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//NumberExpressionEvaluation:
		//	"arithmetic-evaluation" // expression = [gml::ArithmeticExpression | STRING ] "{"
		//	"{" "result" result=NumberLiteral? "," "reason" reason=STRING ("," "arithmetic-evaluations" "["
		//	evaluations+=NumberExpressionEvaluation* "]")? "}";
		public ParserRule getRule() { return rule; }

		//"arithmetic-evaluation" // expression = [gml::ArithmeticExpression | STRING ] "{"
		//"{" "result" result=NumberLiteral? "," "reason" reason=STRING ("," "arithmetic-evaluations" "["
		//evaluations+=NumberExpressionEvaluation* "]")? "}"
		public Group getGroup() { return cGroup; }

		//"arithmetic-evaluation"
		public Keyword getArithmeticEvaluationKeyword_0() { return cArithmeticEvaluationKeyword_0; }

		//// expression = [gml::ArithmeticExpression | STRING ] "{"
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"result"
		public Keyword getResultKeyword_2() { return cResultKeyword_2; }

		//result=NumberLiteral?
		public Assignment getResultAssignment_3() { return cResultAssignment_3; }

		//NumberLiteral
		public RuleCall getResultNumberLiteralParserRuleCall_3_0() { return cResultNumberLiteralParserRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"reason"
		public Keyword getReasonKeyword_5() { return cReasonKeyword_5; }

		//reason=STRING
		public Assignment getReasonAssignment_6() { return cReasonAssignment_6; }

		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_6_0() { return cReasonSTRINGTerminalRuleCall_6_0; }

		//("," "arithmetic-evaluations" "[" evaluations+=NumberExpressionEvaluation* "]")?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//"arithmetic-evaluations"
		public Keyword getArithmeticEvaluationsKeyword_7_1() { return cArithmeticEvaluationsKeyword_7_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_2() { return cLeftSquareBracketKeyword_7_2; }

		//evaluations+=NumberExpressionEvaluation*
		public Assignment getEvaluationsAssignment_7_3() { return cEvaluationsAssignment_7_3; }

		//NumberExpressionEvaluation
		public RuleCall getEvaluationsNumberExpressionEvaluationParserRuleCall_7_3_0() { return cEvaluationsNumberExpressionEvaluationParserRuleCall_7_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_4() { return cRightSquareBracketKeyword_7_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	
	public class VerdictElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Verdict");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPASSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPASSPASSKeyword_0_0 = (Keyword)cPASSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFAILEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFAILFAILKeyword_1_0 = (Keyword)cFAILEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINCONCLUSIVEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINCONCLUSIVEINCONCLUSIVEKeyword_2_0 = (Keyword)cINCONCLUSIVEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Verdict:
		//	PASS | FAIL | INCONCLUSIVE;
		public EnumRule getRule() { return rule; }

		//PASS | FAIL | INCONCLUSIVE
		public Alternatives getAlternatives() { return cAlternatives; }

		//PASS
		public EnumLiteralDeclaration getPASSEnumLiteralDeclaration_0() { return cPASSEnumLiteralDeclaration_0; }

		//"PASS"
		public Keyword getPASSPASSKeyword_0_0() { return cPASSPASSKeyword_0_0; }

		//FAIL
		public EnumLiteralDeclaration getFAILEnumLiteralDeclaration_1() { return cFAILEnumLiteralDeclaration_1; }

		//"FAIL"
		public Keyword getFAILFAILKeyword_1_0() { return cFAILFAILKeyword_1_0; }

		//INCONCLUSIVE
		public EnumLiteralDeclaration getINCONCLUSIVEEnumLiteralDeclaration_2() { return cINCONCLUSIVEEnumLiteralDeclaration_2; }

		//"INCONCLUSIVE"
		public Keyword getINCONCLUSIVEINCONCLUSIVEKeyword_2_0() { return cINCONCLUSIVEINCONCLUSIVEKeyword_2_0; }
	}
	
	private ARTISTModelElements pARTISTModel;
	private MigrationEvaluationElements pMigrationEvaluation;
	private TransformationElements pTransformation;
	private AppliedPropertyEvaluationElements pAppliedPropertyEvaluation;
	private AppliedQualitativePropertyEvaluationElements pAppliedQualitativePropertyEvaluation;
	private AppliedQuantitativePropertyEvaluationElements pAppliedQuantitativePropertyEvaluation;
	private GoalModelEvaluationElements pGoalModelEvaluation;
	private GoalEvaluationElements pGoalEvaluation;
	private SoftGoalEvaluationElements pSoftGoalEvaluation;
	private HardGoalEvaluationElements pHardGoalEvaluation;
	private CompositeGoalEvaluationElements pCompositeGoalEvaluation;
	private ValueExpressionEvaluationElements pValueExpressionEvaluation;
	private ValueSpecificationExpressionEvaluationElements pValueSpecificationExpressionEvaluation;
	private BooleanExpressionEvaluationElements pBooleanExpressionEvaluation;
	private NumberExpressionEvaluationElements pNumberExpressionEvaluation;
	private VerdictElements unknownRuleVerdict;
	
	private final Grammar grammar;

	private ARTISTCommonGrammarAccess gaARTISTCommon;

	@Inject
	public GELGrammarAccess(GrammarProvider grammarProvider,
		ARTISTCommonGrammarAccess gaARTISTCommon) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaARTISTCommon = gaARTISTCommon;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("eu.artist.postmigration.nfrvt.lang.gel.GEL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public ARTISTCommonGrammarAccess getARTISTCommonGrammarAccess() {
		return gaARTISTCommon;
	}

	
	//ARTISTModel returns common::ARTISTModel:
	//	MigrationEvaluation;
	public ARTISTModelElements getARTISTModelAccess() {
		return (pARTISTModel != null) ? pARTISTModel : (pARTISTModel = new ARTISTModelElements());
	}
	
	public ParserRule getARTISTModelRule() {
		return getARTISTModelAccess().getRule();
	}

	//MigrationEvaluation:
	//	imports+=ImportNamespace* "evaluation" name=QualifiedName "{" "date" date=DATE_TIME "," "migration" "["
	//	transformations+=Transformation* "]" "," "property-evaluations" "[" propertyEvaluations+=AppliedPropertyEvaluation*
	//	"]" "," evaluation=GoalModelEvaluation "}";
	public MigrationEvaluationElements getMigrationEvaluationAccess() {
		return (pMigrationEvaluation != null) ? pMigrationEvaluation : (pMigrationEvaluation = new MigrationEvaluationElements());
	}
	
	public ParserRule getMigrationEvaluationRule() {
		return getMigrationEvaluationAccess().getRule();
	}

	//Transformation:
	//	"transformation" name=ID "{" "pattern" pattern=[tsl::Pattern|QualifiedName] ("," "source" "["
	//	source+=[uml::NamedElement|QualifiedName]* "]")? ("," "target" "[" target+=[uml::NamedElement|QualifiedName]* "]")?
	//	("," "context" "[" context+=[uml::NamedElement|QualifiedName]* "]")? ("," "info" info=STRING)? "}";
	public TransformationElements getTransformationAccess() {
		return (pTransformation != null) ? pTransformation : (pTransformation = new TransformationElements());
	}
	
	public ParserRule getTransformationRule() {
		return getTransformationAccess().getRule();
	}

	//AppliedPropertyEvaluation:
	//	AppliedQualitativePropertyEvaluation | AppliedQuantitativePropertyEvaluation;
	public AppliedPropertyEvaluationElements getAppliedPropertyEvaluationAccess() {
		return (pAppliedPropertyEvaluation != null) ? pAppliedPropertyEvaluation : (pAppliedPropertyEvaluation = new AppliedPropertyEvaluationElements());
	}
	
	public ParserRule getAppliedPropertyEvaluationRule() {
		return getAppliedPropertyEvaluationAccess().getRule();
	}

	//AppliedQualitativePropertyEvaluation:
	//	"qualitative" name=ID "{" "property" property=[gml::AppliedQualitativeProperty|QualifiedName] "," "value"
	//	value=ValueSpecification "," evaluation=NumberExpressionEvaluation "}";
	public AppliedQualitativePropertyEvaluationElements getAppliedQualitativePropertyEvaluationAccess() {
		return (pAppliedQualitativePropertyEvaluation != null) ? pAppliedQualitativePropertyEvaluation : (pAppliedQualitativePropertyEvaluation = new AppliedQualitativePropertyEvaluationElements());
	}
	
	public ParserRule getAppliedQualitativePropertyEvaluationRule() {
		return getAppliedQualitativePropertyEvaluationAccess().getRule();
	}

	//AppliedQuantitativePropertyEvaluation:
	//	"quantitative" name=ID "{" "property" property=[gml::AppliedQuantitativeProperty|QualifiedName] "," "value"
	//	value=ValueSpecification "," evaluation=ValueExpressionEvaluation ("," "measurements" "["
	//	(measurements+=[pml::Measurement|QualifiedName] ("," measurements+=[pml::Measurement|QualifiedName])*)? "]")? "}";
	public AppliedQuantitativePropertyEvaluationElements getAppliedQuantitativePropertyEvaluationAccess() {
		return (pAppliedQuantitativePropertyEvaluation != null) ? pAppliedQuantitativePropertyEvaluation : (pAppliedQuantitativePropertyEvaluation = new AppliedQuantitativePropertyEvaluationElements());
	}
	
	public ParserRule getAppliedQuantitativePropertyEvaluationRule() {
		return getAppliedQuantitativePropertyEvaluationAccess().getRule();
	}

	//GoalModelEvaluation:
	//	"goalmodel-evaluation" "{" "goalmodel" goalModel=[gml::GoalModel|QualifiedName] "," "verdict" verdict=Verdict ","
	//	"reason" reason=STRING "," "goal-evaluations" "[" evaluations+=GoalEvaluation* "]" "}";
	public GoalModelEvaluationElements getGoalModelEvaluationAccess() {
		return (pGoalModelEvaluation != null) ? pGoalModelEvaluation : (pGoalModelEvaluation = new GoalModelEvaluationElements());
	}
	
	public ParserRule getGoalModelEvaluationRule() {
		return getGoalModelEvaluationAccess().getRule();
	}

	//GoalEvaluation:
	//	SoftGoalEvaluation | HardGoalEvaluation | CompositeGoalEvaluation;
	public GoalEvaluationElements getGoalEvaluationAccess() {
		return (pGoalEvaluation != null) ? pGoalEvaluation : (pGoalEvaluation = new GoalEvaluationElements());
	}
	
	public ParserRule getGoalEvaluationRule() {
		return getGoalEvaluationAccess().getRule();
	}

	//SoftGoalEvaluation:
	//	"soft-goal-evaluation" name=ID "{" "goal" goal=[gml::SoftGoal|QualifiedName] "," "verdict" verdict=Verdict ","
	//	"reason" reason=STRING "," "difference" difference=Number? "}";
	public SoftGoalEvaluationElements getSoftGoalEvaluationAccess() {
		return (pSoftGoalEvaluation != null) ? pSoftGoalEvaluation : (pSoftGoalEvaluation = new SoftGoalEvaluationElements());
	}
	
	public ParserRule getSoftGoalEvaluationRule() {
		return getSoftGoalEvaluationAccess().getRule();
	}

	//HardGoalEvaluation:
	//	"hard-goal-evaluation" name=ID "{" "goal" goal=[gml::HardGoal|QualifiedName] "," "verdict" verdict=Verdict ","
	//	"reason" reason=STRING "," "condition-evaluation" conditionEvaluation=BooleanExpressionEvaluation "}";
	public HardGoalEvaluationElements getHardGoalEvaluationAccess() {
		return (pHardGoalEvaluation != null) ? pHardGoalEvaluation : (pHardGoalEvaluation = new HardGoalEvaluationElements());
	}
	
	public ParserRule getHardGoalEvaluationRule() {
		return getHardGoalEvaluationAccess().getRule();
	}

	//CompositeGoalEvaluation:
	//	"composite-goal-evaluation" name=ID "{" "goal" goal=[gml::CompositeGoal|QualifiedName] "," "verdict" verdict=Verdict
	//	"," "reason" reason=STRING "," "condition-evaluation" conditionEvaluation=BooleanExpressionEvaluation "}";
	public CompositeGoalEvaluationElements getCompositeGoalEvaluationAccess() {
		return (pCompositeGoalEvaluation != null) ? pCompositeGoalEvaluation : (pCompositeGoalEvaluation = new CompositeGoalEvaluationElements());
	}
	
	public ParserRule getCompositeGoalEvaluationRule() {
		return getCompositeGoalEvaluationAccess().getRule();
	}

	//ValueExpressionEvaluation:
	//	ValueSpecificationExpressionEvaluation | BooleanExpressionEvaluation | NumberExpressionEvaluation;
	public ValueExpressionEvaluationElements getValueExpressionEvaluationAccess() {
		return (pValueExpressionEvaluation != null) ? pValueExpressionEvaluation : (pValueExpressionEvaluation = new ValueExpressionEvaluationElements());
	}
	
	public ParserRule getValueExpressionEvaluationRule() {
		return getValueExpressionEvaluationAccess().getRule();
	}

	//ValueSpecificationExpressionEvaluation:
	//	"value-evaluation" "{" "result" result=ValueSpecification? "," "reason" reason=STRING ("," "evaluations" "["
	//	evaluations+=ValueExpressionEvaluation* "]")? "}";
	public ValueSpecificationExpressionEvaluationElements getValueSpecificationExpressionEvaluationAccess() {
		return (pValueSpecificationExpressionEvaluation != null) ? pValueSpecificationExpressionEvaluation : (pValueSpecificationExpressionEvaluation = new ValueSpecificationExpressionEvaluationElements());
	}
	
	public ParserRule getValueSpecificationExpressionEvaluationRule() {
		return getValueSpecificationExpressionEvaluationAccess().getRule();
	}

	//BooleanExpressionEvaluation:
	//	"expression-evaluation" // expression = [gml::ValueExpression | STRING ] "{"
	//	"{" ("result" result=BooleanLiteral? ",")? "reason" reason=STRING ("," "difference" difference=Number?)? (","
	//	"evaluations" "[" evaluations+=ValueExpressionEvaluation* "]")? "}";
	public BooleanExpressionEvaluationElements getBooleanExpressionEvaluationAccess() {
		return (pBooleanExpressionEvaluation != null) ? pBooleanExpressionEvaluation : (pBooleanExpressionEvaluation = new BooleanExpressionEvaluationElements());
	}
	
	public ParserRule getBooleanExpressionEvaluationRule() {
		return getBooleanExpressionEvaluationAccess().getRule();
	}

	//NumberExpressionEvaluation:
	//	"arithmetic-evaluation" // expression = [gml::ArithmeticExpression | STRING ] "{"
	//	"{" "result" result=NumberLiteral? "," "reason" reason=STRING ("," "arithmetic-evaluations" "["
	//	evaluations+=NumberExpressionEvaluation* "]")? "}";
	public NumberExpressionEvaluationElements getNumberExpressionEvaluationAccess() {
		return (pNumberExpressionEvaluation != null) ? pNumberExpressionEvaluation : (pNumberExpressionEvaluation = new NumberExpressionEvaluationElements());
	}
	
	public ParserRule getNumberExpressionEvaluationRule() {
		return getNumberExpressionEvaluationAccess().getRule();
	}

	//enum Verdict:
	//	PASS | FAIL | INCONCLUSIVE;
	public VerdictElements getVerdictAccess() {
		return (unknownRuleVerdict != null) ? unknownRuleVerdict : (unknownRuleVerdict = new VerdictElements());
	}
	
	public EnumRule getVerdictRule() {
		return getVerdictAccess().getRule();
	}

	//Expression:
	//	Implication;
	public ARTISTCommonGrammarAccess.ExpressionElements getExpressionAccess() {
		return gaARTISTCommon.getExpressionAccess();
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}

	//Implication:
	//	Disjunction ({Implication.left=current} operator=ImplicationOperator right=Disjunction)*;
	public ARTISTCommonGrammarAccess.ImplicationElements getImplicationAccess() {
		return gaARTISTCommon.getImplicationAccess();
	}
	
	public ParserRule getImplicationRule() {
		return getImplicationAccess().getRule();
	}

	//Disjunction:
	//	Conjunction ({Disjunction.left=current} operator=(OrOperator | XOrOperator) right=Conjunction)*;
	public ARTISTCommonGrammarAccess.DisjunctionElements getDisjunctionAccess() {
		return gaARTISTCommon.getDisjunctionAccess();
	}
	
	public ParserRule getDisjunctionRule() {
		return getDisjunctionAccess().getRule();
	}

	//Conjunction:
	//	Comparison ({Conjunction.left=current} operator=AndOperator right=Comparison)*;
	public ARTISTCommonGrammarAccess.ConjunctionElements getConjunctionAccess() {
		return gaARTISTCommon.getConjunctionAccess();
	}
	
	public ParserRule getConjunctionRule() {
		return getConjunctionAccess().getRule();
	}

	//Comparison:
	//	BooleanUnit ({Comparison.left=current} operator=(EqualsOperator | NotEqualsOperator) right=BooleanUnit)*;
	public ARTISTCommonGrammarAccess.ComparisonElements getComparisonAccess() {
		return gaARTISTCommon.getComparisonAccess();
	}
	
	public ParserRule getComparisonRule() {
		return getComparisonAccess().getRule();
	}

	//BooleanUnit:
	//	Negation | RelationalExpression | BooleanLiteral;
	public ARTISTCommonGrammarAccess.BooleanUnitElements getBooleanUnitAccess() {
		return gaARTISTCommon.getBooleanUnitAccess();
	}
	
	public ParserRule getBooleanUnitRule() {
		return getBooleanUnitAccess().getRule();
	}

	//Negation:
	//	operator=NotOperator value=BooleanUnit;
	public ARTISTCommonGrammarAccess.NegationElements getNegationAccess() {
		return gaARTISTCommon.getNegationAccess();
	}
	
	public ParserRule getNegationRule() {
		return getNegationAccess().getRule();
	}

	//RelationalExpression:
	//	ComparableExpression (({RelationalExpression.left=current} operator=GreaterThanOperator |
	//	{RelationalExpression.left=current} operator=GreaterOrEqualThanOperator | {RelationalExpression.left=current}
	//	operator=LessOrEqualThanOperator | {RelationalExpression.left=current} operator=LessThanOperator)
	//	right=ComparableExpression)*;
	public ARTISTCommonGrammarAccess.RelationalExpressionElements getRelationalExpressionAccess() {
		return gaARTISTCommon.getRelationalExpressionAccess();
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}

	//ComparableExpression:
	//	ArithmeticExpression | InstanceSpecificationExpression | ObjectSpecificationExpression | NullLiteral | StringLiteral
	//	| UnlimitedLiteral | ParenthesizedExpression;
	public ARTISTCommonGrammarAccess.ComparableExpressionElements getComparableExpressionAccess() {
		return gaARTISTCommon.getComparableExpressionAccess();
	}
	
	public ParserRule getComparableExpressionRule() {
		return getComparableExpressionAccess().getRule();
	}

	//ArithmeticExpression:
	//	AdditiveExpression;
	public ARTISTCommonGrammarAccess.ArithmeticExpressionElements getArithmeticExpressionAccess() {
		return gaARTISTCommon.getArithmeticExpressionAccess();
	}
	
	public ParserRule getArithmeticExpressionRule() {
		return getArithmeticExpressionAccess().getRule();
	}

	//AdditiveExpression:
	//	MultiplicativeExpression ({AdditiveExpression.left=current} operator=(SubstractionOperator | AdditionOperator)
	//	right=MultiplicativeExpression)*;
	public ARTISTCommonGrammarAccess.AdditiveExpressionElements getAdditiveExpressionAccess() {
		return gaARTISTCommon.getAdditiveExpressionAccess();
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}

	//MultiplicativeExpression:
	//	NumberExpression ({MultiplicativeExpression.left=current} operator=(MultiplicationOperator | DivisionOperator |
	//	ModulusOperator) right=NumberExpression)*;
	public ARTISTCommonGrammarAccess.MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return gaARTISTCommon.getMultiplicativeExpressionAccess();
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}

	//NumberExpression:
	//	NumberLiteral | NumberFunction;
	public ARTISTCommonGrammarAccess.NumberExpressionElements getNumberExpressionAccess() {
		return gaARTISTCommon.getNumberExpressionAccess();
	}
	
	public ParserRule getNumberExpressionRule() {
		return getNumberExpressionAccess().getRule();
	}

	//NumberFunction:
	//	MaximumFunction | MinimumFunction | AverageFunction | SumFunction | ExponentialFunction | AbsoluteFunction |
	//	NaturalLogarithmFunction | CommonLogarithmFunction;
	public ARTISTCommonGrammarAccess.NumberFunctionElements getNumberFunctionAccess() {
		return gaARTISTCommon.getNumberFunctionAccess();
	}
	
	public ParserRule getNumberFunctionRule() {
		return getNumberFunctionAccess().getRule();
	}

	//MaximumFunction:
	//	operator=MaxOperator "(" values+=NumberExpression ("," values+=NumberExpression)* ")";
	public ARTISTCommonGrammarAccess.MaximumFunctionElements getMaximumFunctionAccess() {
		return gaARTISTCommon.getMaximumFunctionAccess();
	}
	
	public ParserRule getMaximumFunctionRule() {
		return getMaximumFunctionAccess().getRule();
	}

	//MinimumFunction:
	//	operator=MinOperator "(" values+=NumberExpression ("," values+=NumberExpression)* ")";
	public ARTISTCommonGrammarAccess.MinimumFunctionElements getMinimumFunctionAccess() {
		return gaARTISTCommon.getMinimumFunctionAccess();
	}
	
	public ParserRule getMinimumFunctionRule() {
		return getMinimumFunctionAccess().getRule();
	}

	//AverageFunction:
	//	operator=AvgOperator "(" values+=NumberExpression ("," values+=NumberExpression)* ")";
	public ARTISTCommonGrammarAccess.AverageFunctionElements getAverageFunctionAccess() {
		return gaARTISTCommon.getAverageFunctionAccess();
	}
	
	public ParserRule getAverageFunctionRule() {
		return getAverageFunctionAccess().getRule();
	}

	//SumFunction:
	//	operator=SumOperator "(" values+=NumberExpression ("," values+=NumberExpression)* ")";
	public ARTISTCommonGrammarAccess.SumFunctionElements getSumFunctionAccess() {
		return gaARTISTCommon.getSumFunctionAccess();
	}
	
	public ParserRule getSumFunctionRule() {
		return getSumFunctionAccess().getRule();
	}

	//ExponentialFunction:
	//	operator=ExponentialOperator "(" base=NumberExpression "," exponent=NumberExpression ")";
	public ARTISTCommonGrammarAccess.ExponentialFunctionElements getExponentialFunctionAccess() {
		return gaARTISTCommon.getExponentialFunctionAccess();
	}
	
	public ParserRule getExponentialFunctionRule() {
		return getExponentialFunctionAccess().getRule();
	}

	//AbsoluteFunction:
	//	operator=AbsoluteOperator "(" value=NumberExpression ")";
	public ARTISTCommonGrammarAccess.AbsoluteFunctionElements getAbsoluteFunctionAccess() {
		return gaARTISTCommon.getAbsoluteFunctionAccess();
	}
	
	public ParserRule getAbsoluteFunctionRule() {
		return getAbsoluteFunctionAccess().getRule();
	}

	//NaturalLogarithmFunction:
	//	operator=NaturalLogarithmOperator "(" value=NumberExpression ")";
	public ARTISTCommonGrammarAccess.NaturalLogarithmFunctionElements getNaturalLogarithmFunctionAccess() {
		return gaARTISTCommon.getNaturalLogarithmFunctionAccess();
	}
	
	public ParserRule getNaturalLogarithmFunctionRule() {
		return getNaturalLogarithmFunctionAccess().getRule();
	}

	//CommonLogarithmFunction:
	//	operator=CommonLogarithmOperator "(" value=NumberExpression ")";
	public ARTISTCommonGrammarAccess.CommonLogarithmFunctionElements getCommonLogarithmFunctionAccess() {
		return gaARTISTCommon.getCommonLogarithmFunctionAccess();
	}
	
	public ParserRule getCommonLogarithmFunctionRule() {
		return getCommonLogarithmFunctionAccess().getRule();
	}

	//ParenthesizedExpression:
	//	LeftParenthesis value=Expression RightParenthesis;
	public ARTISTCommonGrammarAccess.ParenthesizedExpressionElements getParenthesizedExpressionAccess() {
		return gaARTISTCommon.getParenthesizedExpressionAccess();
	}
	
	public ParserRule getParenthesizedExpressionRule() {
		return getParenthesizedExpressionAccess().getRule();
	}

	//ValueSpecification:
	//	LiteralValueExpression | InstanceSpecificationExpression | ObjectSpecificationExpression;
	public ARTISTCommonGrammarAccess.ValueSpecificationElements getValueSpecificationAccess() {
		return gaARTISTCommon.getValueSpecificationAccess();
	}
	
	public ParserRule getValueSpecificationRule() {
		return getValueSpecificationAccess().getRule();
	}

	//ObjectSpecificationExpression:
	//	type=[uml::DataType|QualifiedName] (value=Collection | value=Tuple);
	public ARTISTCommonGrammarAccess.ObjectSpecificationExpressionElements getObjectSpecificationExpressionAccess() {
		return gaARTISTCommon.getObjectSpecificationExpressionAccess();
	}
	
	public ParserRule getObjectSpecificationExpressionRule() {
		return getObjectSpecificationExpressionAccess().getRule();
	}

	//Collection:
	//	{Collection} "[" (values+=ValueSpecification ("," values+=ValueSpecification)*)? "]";
	public ARTISTCommonGrammarAccess.CollectionElements getCollectionAccess() {
		return gaARTISTCommon.getCollectionAccess();
	}
	
	public ParserRule getCollectionRule() {
		return getCollectionAccess().getRule();
	}

	//Tuple:
	//	{Tuple} "{" (tuples+=PropertyValuePair ("," tuples+=PropertyValuePair)*)? "}";
	public ARTISTCommonGrammarAccess.TupleElements getTupleAccess() {
		return gaARTISTCommon.getTupleAccess();
	}
	
	public ParserRule getTupleRule() {
		return getTupleAccess().getRule();
	}

	//PropertyValuePair:
	//	property=[uml::Property|QualifiedName] "=" value=ValueSpecification;
	public ARTISTCommonGrammarAccess.PropertyValuePairElements getPropertyValuePairAccess() {
		return gaARTISTCommon.getPropertyValuePairAccess();
	}
	
	public ParserRule getPropertyValuePairRule() {
		return getPropertyValuePairAccess().getRule();
	}

	//InstanceSpecificationExpression:
	//	value=[uml::InstanceSpecification|QualifiedName];
	public ARTISTCommonGrammarAccess.InstanceSpecificationExpressionElements getInstanceSpecificationExpressionAccess() {
		return gaARTISTCommon.getInstanceSpecificationExpressionAccess();
	}
	
	public ParserRule getInstanceSpecificationExpressionRule() {
		return getInstanceSpecificationExpressionAccess().getRule();
	}

	//LiteralValueExpression:
	//	NumberLiteral | BooleanLiteral | NullLiteral | StringLiteral | UnlimitedLiteral;
	public ARTISTCommonGrammarAccess.LiteralValueExpressionElements getLiteralValueExpressionAccess() {
		return gaARTISTCommon.getLiteralValueExpressionAccess();
	}
	
	public ParserRule getLiteralValueExpressionRule() {
		return getLiteralValueExpressionAccess().getRule();
	}

	//BooleanLiteral:
	//	value=EBOOLEAN;
	public ARTISTCommonGrammarAccess.BooleanLiteralElements getBooleanLiteralAccess() {
		return gaARTISTCommon.getBooleanLiteralAccess();
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}

	//NumberLiteral:
	//	value=Number;
	public ARTISTCommonGrammarAccess.NumberLiteralElements getNumberLiteralAccess() {
		return gaARTISTCommon.getNumberLiteralAccess();
	}
	
	public ParserRule getNumberLiteralRule() {
		return getNumberLiteralAccess().getRule();
	}

	//NullLiteral:
	//	value=NULL;
	public ARTISTCommonGrammarAccess.NullLiteralElements getNullLiteralAccess() {
		return gaARTISTCommon.getNullLiteralAccess();
	}
	
	public ParserRule getNullLiteralRule() {
		return getNullLiteralAccess().getRule();
	}

	//StringLiteral:
	//	value=STRING;
	public ARTISTCommonGrammarAccess.StringLiteralElements getStringLiteralAccess() {
		return gaARTISTCommon.getStringLiteralAccess();
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//UnlimitedLiteral:
	//	value="*";
	public ARTISTCommonGrammarAccess.UnlimitedLiteralElements getUnlimitedLiteralAccess() {
		return gaARTISTCommon.getUnlimitedLiteralAccess();
	}
	
	public ParserRule getUnlimitedLiteralRule() {
		return getUnlimitedLiteralAccess().getRule();
	}

	//OrOperator returns Operator:
	//	{OrOperator} ("or" | "||");
	public ARTISTCommonGrammarAccess.OrOperatorElements getOrOperatorAccess() {
		return gaARTISTCommon.getOrOperatorAccess();
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}

	//XOrOperator returns Operator:
	//	{XOrOperator} ("xor" | "^");
	public ARTISTCommonGrammarAccess.XOrOperatorElements getXOrOperatorAccess() {
		return gaARTISTCommon.getXOrOperatorAccess();
	}
	
	public ParserRule getXOrOperatorRule() {
		return getXOrOperatorAccess().getRule();
	}

	//AndOperator returns Operator:
	//	{AndOperator} ("and" | "&&");
	public ARTISTCommonGrammarAccess.AndOperatorElements getAndOperatorAccess() {
		return gaARTISTCommon.getAndOperatorAccess();
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}

	//ImplicationOperator returns Operator:
	//	{ImplicationOperator} ("=>" | "->");
	public ARTISTCommonGrammarAccess.ImplicationOperatorElements getImplicationOperatorAccess() {
		return gaARTISTCommon.getImplicationOperatorAccess();
	}
	
	public ParserRule getImplicationOperatorRule() {
		return getImplicationOperatorAccess().getRule();
	}

	//EqualsOperator returns Operator:
	//	{EqualsOperator} "==";
	public ARTISTCommonGrammarAccess.EqualsOperatorElements getEqualsOperatorAccess() {
		return gaARTISTCommon.getEqualsOperatorAccess();
	}
	
	public ParserRule getEqualsOperatorRule() {
		return getEqualsOperatorAccess().getRule();
	}

	//NotEqualsOperator returns Operator:
	//	{NotEqualsOperator} ("!=" | "<>");
	public ARTISTCommonGrammarAccess.NotEqualsOperatorElements getNotEqualsOperatorAccess() {
		return gaARTISTCommon.getNotEqualsOperatorAccess();
	}
	
	public ParserRule getNotEqualsOperatorRule() {
		return getNotEqualsOperatorAccess().getRule();
	}

	//NotOperator returns Operator:
	//	{NotOperator} ("!" | "not");
	public ARTISTCommonGrammarAccess.NotOperatorElements getNotOperatorAccess() {
		return gaARTISTCommon.getNotOperatorAccess();
	}
	
	public ParserRule getNotOperatorRule() {
		return getNotOperatorAccess().getRule();
	}

	//GreaterThanOperator returns Operator:
	//	{GreaterThanOperator} ">";
	public ARTISTCommonGrammarAccess.GreaterThanOperatorElements getGreaterThanOperatorAccess() {
		return gaARTISTCommon.getGreaterThanOperatorAccess();
	}
	
	public ParserRule getGreaterThanOperatorRule() {
		return getGreaterThanOperatorAccess().getRule();
	}

	//GreaterOrEqualThanOperator returns Operator:
	//	{GreaterOrEqualThanOperator} ">=";
	public ARTISTCommonGrammarAccess.GreaterOrEqualThanOperatorElements getGreaterOrEqualThanOperatorAccess() {
		return gaARTISTCommon.getGreaterOrEqualThanOperatorAccess();
	}
	
	public ParserRule getGreaterOrEqualThanOperatorRule() {
		return getGreaterOrEqualThanOperatorAccess().getRule();
	}

	//LessThanOperator returns Operator:
	//	{LessThanOperator} "<";
	public ARTISTCommonGrammarAccess.LessThanOperatorElements getLessThanOperatorAccess() {
		return gaARTISTCommon.getLessThanOperatorAccess();
	}
	
	public ParserRule getLessThanOperatorRule() {
		return getLessThanOperatorAccess().getRule();
	}

	//LessOrEqualThanOperator returns Operator:
	//	{LessOrEqualThanOperator} "<=";
	public ARTISTCommonGrammarAccess.LessOrEqualThanOperatorElements getLessOrEqualThanOperatorAccess() {
		return gaARTISTCommon.getLessOrEqualThanOperatorAccess();
	}
	
	public ParserRule getLessOrEqualThanOperatorRule() {
		return getLessOrEqualThanOperatorAccess().getRule();
	}

	//AdditionOperator returns Operator:
	//	{AdditionOperator} "+";
	public ARTISTCommonGrammarAccess.AdditionOperatorElements getAdditionOperatorAccess() {
		return gaARTISTCommon.getAdditionOperatorAccess();
	}
	
	public ParserRule getAdditionOperatorRule() {
		return getAdditionOperatorAccess().getRule();
	}

	//SubstractionOperator returns Operator:
	//	{SubstractionOperator} "-";
	public ARTISTCommonGrammarAccess.SubstractionOperatorElements getSubstractionOperatorAccess() {
		return gaARTISTCommon.getSubstractionOperatorAccess();
	}
	
	public ParserRule getSubstractionOperatorRule() {
		return getSubstractionOperatorAccess().getRule();
	}

	//MultiplicationOperator returns Operator:
	//	{MultiplicationOperator} "*";
	public ARTISTCommonGrammarAccess.MultiplicationOperatorElements getMultiplicationOperatorAccess() {
		return gaARTISTCommon.getMultiplicationOperatorAccess();
	}
	
	public ParserRule getMultiplicationOperatorRule() {
		return getMultiplicationOperatorAccess().getRule();
	}

	//DivisionOperator returns Operator:
	//	{DivisionOperator} "/";
	public ARTISTCommonGrammarAccess.DivisionOperatorElements getDivisionOperatorAccess() {
		return gaARTISTCommon.getDivisionOperatorAccess();
	}
	
	public ParserRule getDivisionOperatorRule() {
		return getDivisionOperatorAccess().getRule();
	}

	//ModulusOperator returns Operator:
	//	{ModulusOperator} "%";
	public ARTISTCommonGrammarAccess.ModulusOperatorElements getModulusOperatorAccess() {
		return gaARTISTCommon.getModulusOperatorAccess();
	}
	
	public ParserRule getModulusOperatorRule() {
		return getModulusOperatorAccess().getRule();
	}

	//MaxOperator returns Operator:
	//	{MaxOperator} "max";
	public ARTISTCommonGrammarAccess.MaxOperatorElements getMaxOperatorAccess() {
		return gaARTISTCommon.getMaxOperatorAccess();
	}
	
	public ParserRule getMaxOperatorRule() {
		return getMaxOperatorAccess().getRule();
	}

	//MinOperator returns Operator:
	//	{MinOperator} "min";
	public ARTISTCommonGrammarAccess.MinOperatorElements getMinOperatorAccess() {
		return gaARTISTCommon.getMinOperatorAccess();
	}
	
	public ParserRule getMinOperatorRule() {
		return getMinOperatorAccess().getRule();
	}

	//AvgOperator returns Operator:
	//	{AvgOperator} "avg";
	public ARTISTCommonGrammarAccess.AvgOperatorElements getAvgOperatorAccess() {
		return gaARTISTCommon.getAvgOperatorAccess();
	}
	
	public ParserRule getAvgOperatorRule() {
		return getAvgOperatorAccess().getRule();
	}

	//SumOperator returns Operator:
	//	{SumOperator} "sum";
	public ARTISTCommonGrammarAccess.SumOperatorElements getSumOperatorAccess() {
		return gaARTISTCommon.getSumOperatorAccess();
	}
	
	public ParserRule getSumOperatorRule() {
		return getSumOperatorAccess().getRule();
	}

	//ExponentialOperator returns Operator:
	//	{ExponentialOperator} "exp";
	public ARTISTCommonGrammarAccess.ExponentialOperatorElements getExponentialOperatorAccess() {
		return gaARTISTCommon.getExponentialOperatorAccess();
	}
	
	public ParserRule getExponentialOperatorRule() {
		return getExponentialOperatorAccess().getRule();
	}

	//AbsoluteOperator returns Operator:
	//	{AbsoluteOperator} "abs";
	public ARTISTCommonGrammarAccess.AbsoluteOperatorElements getAbsoluteOperatorAccess() {
		return gaARTISTCommon.getAbsoluteOperatorAccess();
	}
	
	public ParserRule getAbsoluteOperatorRule() {
		return getAbsoluteOperatorAccess().getRule();
	}

	//NaturalLogarithmOperator returns Operator:
	//	{NaturalLogarithmOperator} "ln";
	public ARTISTCommonGrammarAccess.NaturalLogarithmOperatorElements getNaturalLogarithmOperatorAccess() {
		return gaARTISTCommon.getNaturalLogarithmOperatorAccess();
	}
	
	public ParserRule getNaturalLogarithmOperatorRule() {
		return getNaturalLogarithmOperatorAccess().getRule();
	}

	//CommonLogarithmOperator returns Operator:
	//	{CommonLogarithmOperator} "log";
	public ARTISTCommonGrammarAccess.CommonLogarithmOperatorElements getCommonLogarithmOperatorAccess() {
		return gaARTISTCommon.getCommonLogarithmOperatorAccess();
	}
	
	public ParserRule getCommonLogarithmOperatorRule() {
		return getCommonLogarithmOperatorAccess().getRule();
	}

	//LeftParenthesis:
	//	"(";
	public ARTISTCommonGrammarAccess.LeftParenthesisElements getLeftParenthesisAccess() {
		return gaARTISTCommon.getLeftParenthesisAccess();
	}
	
	public ParserRule getLeftParenthesisRule() {
		return getLeftParenthesisAccess().getRule();
	}

	//RightParenthesis:
	//	")";
	public ARTISTCommonGrammarAccess.RightParenthesisElements getRightParenthesisAccess() {
		return gaARTISTCommon.getRightParenthesisAccess();
	}
	
	public ParserRule getRightParenthesisRule() {
		return getRightParenthesisAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public ARTISTCommonGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaARTISTCommon.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Workload:
	//	name=ID "{" "activity" activity=[uml::Activity|QualifiedName] "," "pattern" pattern=STRING "}";
	public ARTISTCommonGrammarAccess.WorkloadElements getWorkloadAccess() {
		return gaARTISTCommon.getWorkloadAccess();
	}
	
	public ParserRule getWorkloadRule() {
		return getWorkloadAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName ".*"?;
	public ARTISTCommonGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaARTISTCommon.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ImportURIorNamespace:
	//	"import" (importURI=STRING | importedNamespace=QualifiedNameWithWildcard);
	public ARTISTCommonGrammarAccess.ImportURIorNamespaceElements getImportURIorNamespaceAccess() {
		return gaARTISTCommon.getImportURIorNamespaceAccess();
	}
	
	public ParserRule getImportURIorNamespaceRule() {
		return getImportURIorNamespaceAccess().getRule();
	}

	//ImportURI:
	//	"import" importURI=STRING;
	public ARTISTCommonGrammarAccess.ImportURIElements getImportURIAccess() {
		return gaARTISTCommon.getImportURIAccess();
	}
	
	public ParserRule getImportURIRule() {
		return getImportURIAccess().getRule();
	}

	//ImportNamespace:
	//	"import" importedNamespace=QualifiedNameWithWildcard;
	public ARTISTCommonGrammarAccess.ImportNamespaceElements getImportNamespaceAccess() {
		return gaARTISTCommon.getImportNamespaceAccess();
	}
	
	public ParserRule getImportNamespaceRule() {
		return getImportNamespaceAccess().getRule();
	}

	//Number returns ecore::EBigDecimal:
	//	INT | POSITIVE_SMALL_DECIMAL | SMALL_DECIMAL | EBIGDECIMAL;
	public ARTISTCommonGrammarAccess.NumberElements getNumberAccess() {
		return gaARTISTCommon.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//Impact returns ecore::EBigDecimal:
	//	POSITIVE_SMALL_DECIMAL | SMALL_DECIMAL;
	public ARTISTCommonGrammarAccess.ImpactElements getImpactAccess() {
		return gaARTISTCommon.getImpactAccess();
	}
	
	public ParserRule getImpactRule() {
		return getImpactAccess().getRule();
	}

	//EBooleanObject returns ecore::EBooleanObject:
	//	NULL | EBOOLEAN;
	public ARTISTCommonGrammarAccess.EBooleanObjectElements getEBooleanObjectAccess() {
		return gaARTISTCommon.getEBooleanObjectAccess();
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}

	//terminal EBOOLEAN returns ecore::EBooleanObject:
	//	"true" | "false";
	public TerminalRule getEBOOLEANRule() {
		return gaARTISTCommon.getEBOOLEANRule();
	} 

	//terminal NULL:
	//	"null";
	public TerminalRule getNULLRule() {
		return gaARTISTCommon.getNULLRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaARTISTCommon.getINTRule();
	} 

	//terminal POSITIVE_SMALL_DECIMAL returns ecore::EBigDecimal:
	//	"1" ("." "0"+)? | "0" ("." "0".."9"+)? | "." "0".."9"+;
	public TerminalRule getPOSITIVE_SMALL_DECIMALRule() {
		return gaARTISTCommon.getPOSITIVE_SMALL_DECIMALRule();
	} 

	//terminal SMALL_DECIMAL returns ecore::EBigDecimal:
	//	("+" | "-")? POSITIVE_SMALL_DECIMAL;
	public TerminalRule getSMALL_DECIMALRule() {
		return gaARTISTCommon.getSMALL_DECIMALRule();
	} 

	//terminal EBIGDECIMAL returns ecore::EBigDecimal:
	//	("+" | "-")? (INT | "." INT | INT "." INT);
	public TerminalRule getEBIGDECIMALRule() {
		return gaARTISTCommon.getEBIGDECIMALRule();
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_" | "+" | "-" | "%" | "*" | "/" | "#" | ">" | "<" | "=" | "Â§") ("a".."z" | "A".."Z" |
	//	"_" | "0".."9" | "+" | "-" | "%" | "*" | "/" | "#" | ">" | "<" | "=" | "Â§")*;
	public TerminalRule getIDRule() {
		return gaARTISTCommon.getIDRule();
	} 

	//terminal DATE_TIME returns ecore::EDate: // time zone not working: (('+'|'-') INT ((':' INT) | INT)?)?
	//	INT "-" INT "-" INT ("T" INT ":" INT (":" INT ("." INT)?)?)?;
	public TerminalRule getDATE_TIMERule() {
		return gaARTISTCommon.getDATE_TIMERule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaARTISTCommon.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaARTISTCommon.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaARTISTCommon.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaARTISTCommon.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaARTISTCommon.getANY_OTHERRule();
	} 
}
