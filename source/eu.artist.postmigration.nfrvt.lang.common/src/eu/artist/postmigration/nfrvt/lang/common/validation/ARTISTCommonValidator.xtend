/*
 * generated by Xtext
 */
package eu.artist.postmigration.nfrvt.lang.common.validation

import eu.artist.postmigration.nfrvt.lang.common.artistCommon.Tuple
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ArtistCommonPackage
import org.eclipse.xtext.validation.Check
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ObjectSpecificationExpression
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.Collection
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.PropertyValuePair

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class ARTISTCommonValidator extends eu.artist.postmigration.nfrvt.lang.common.validation.AbstractARTISTCommonValidator {

	@Check
	def checkProperties(Tuple tuple) {
		tuple.tuples.forEach[t | 
			val nr = tuple.tuples.filter[ti | t.property.name.equals(ti.property.name)].size
			if(nr > 1)
				error("Property " + t.property.name + " is defined " + nr + " times in object.", ArtistCommonPackage.Literals.TUPLE__TUPLES)
		]
	}
	
	@Check
	def checkProperties(ObjectSpecificationExpression e) {
		if(e.value instanceof Tuple)
			(e.value as Tuple).checkProperties
		if(e.value instanceof Collection)
			return
	}
	
	@Check
	def checkProperties(PropertyValuePair p) {
		val tuple = p.eContainer as Tuple
		tuple.tuples.forEach[t | 
			val nr = tuple.tuples.filter[ti | t.property.name.equals(ti.property.name)].size
			if(nr > 1)
				error("Property " + t.property.name + " is defined " + nr + " times in object.", ArtistCommonPackage.Literals.PROPERTY_VALUE_PAIR__PROPERTY)
		]
	}
}
